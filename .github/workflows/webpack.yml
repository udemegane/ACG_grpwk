name: Game Client by Babylon.js

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - ".github/workflows/webpack.yml"
  pull_request:
    branches:
      - main
    paths:
      - "src/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Assign memory
      run: export NODE_OPTIONS="--max-old-space-size=6144"
    - name: Install packages
      run: npm install
    - name: Install Protoc
      run: |
        sudo apt update
        sudo apt install -y protobuf-compiler
    - name: Generate proto files
      run: |
        CWD=$(pwd)
        PROTO_DIR="$CWD"/protobuf
        pb2=compiled_pb2
        cd "$PROTO_DIR"
        protofiles=$(command ls -a | grep '.proto')
        AUTOGEN_TS=../src/scenes/GameScripts/protobuf
        mkdir -p  "$AUTOGEN_TS"
        [ $(command find "$AUTOGEN_TS" -name '*_pb2*' | wc -l) -gt 0 ] && rm "$AUTOGEN_TS"/*_pb2*
        info 'Compiling protobuf for js/ts to' "$PROTO_DIR/$AUTOGEN_TS/$pb2.ts"
        protoc \
              --plugin=$CWD/node_modules/.bin/protoc-gen-ts_proto \
              --ts_proto_opt=exportCommonSymbols=false,unrecognizedEnum=false,fileSuffix=_pb2,esModuleInterop=true,oneof=unions \
              --ts_proto_out="$AUTOGEN_TS" *.proto
        echo '/* eslint-disable */' > "$AUTOGEN_TS"/$pb2.ts
        for f in $protofiles; do
          F="${f%.*}" && echo "export * from './${F}_pb2';" >> "$AUTOGEN_TS"/$pb2.ts
        done
        cd "$CWD"
    - name: Set Environment variable
      run: |
        sed -i -e "s@127.0.0.1:5042@dashboard.heroku.com/apps/acggameserver@g" .env
        sed -i -e "s/dev/production/g" .env
        cat .env
    - name: Compile
      run: |
        npm run compile
    - name: Build
      run: |
        npm run build-noeditor
        npm run pack
    - name: App Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dist
    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
        title: "Deploy BabylonJS App"
        status: ${{ job.status }}
        nofail: false
        nodetail: false
        description: "Build and deploy to GitHub Pages"
        username: GitHub Actions
